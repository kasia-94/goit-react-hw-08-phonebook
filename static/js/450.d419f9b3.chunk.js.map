{"version":3,"file":"static/js/450.d419f9b3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/NonLoginPage/NonLoginPage.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n  padding: 10px;\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 5px;\n  transition: border-color 250ms ease;\n  border: 2px solid black;\n  :active,\n  :hover,\n  :focus {\n    border-color: #6a6aec;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  text-transform: capitalize;\n  cursor: pointer;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  background-color: white;\n  transition: background-color 250ms ease, border-color 250ms ease;\n  :active,\n  :hover {\n    background-color: #6a6aec;\n    border-color: #6a6aec;\n  }\n`;\n","export const selectContacts = state => state.contacts.contacts.items;\nexport const selectLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n","import { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  margin-left: 15px;\n  text-transform: capitalize;\n  cursor: pointer;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  background-color: white;\n  transition: background-color 250ms ease, border-color 250ms ease;\n  :active,\n  :hover {\n    background-color: #6a6aec;\n    border-color: #6a6aec;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  height: 30px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { List, Button, Item, Name } from './ContactList.styled';\nimport {\n  selectFilter,\n  selectContacts,\n  selectError,\n  selectLoading,\n} from 'redux/contacts/selectors';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchContacts(controller));\n    return () => controller.abort();\n  }, [dispatch]);\n\n  const showContact = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      {contacts.length > 0 && (\n        <List>\n          {showContact().map(({ id, name, number }) => (\n            <Item key={id}>\n              <Name>{name}:</Name>\n              <p>{number}</p>\n              <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                Delete\n              </Button>\n            </Item>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  width: 200px;\n  border: 2px solid black;\n  transition: border-color 250ms ease;\n  :active,\n  :hover,\n  :focus {\n    border-color: #6a6aec;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { Input, Label } from './Filter.styled';\nimport { getFilterContact } from 'redux/contacts/contactSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(getFilterContact(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={handleChange} />\n    </Label>\n  );\n};\n","export const NonLoginPage = () => {\n  return <h2>Please register or login to your account!</h2>;\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { NonLoginPage } from 'components/NonLoginPage/NonLoginPage';\nimport { useAuth } from 'hooks/useAuth';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const { isLoggedIn } = useAuth();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <>\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <div>{isLoading && <Loader />}</div>\n          <ContactList />\n        </>\n      ) : (\n        <NonLoginPage />\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","Label","Input","Button","selectContacts","state","contacts","items","selectLoading","isLoading","selectError","error","selectFilter","filter","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","onSubmit","preventDefault","find","contact","toLowerCase","alert","addContact","type","onChange","pattern","title","required","List","Item","Name","useEffect","controller","AbortController","fetchContacts","abort","Loader","length","includes","map","id","onClick","deleteContact","Filter","getFilterContact","NonLoginPage","isLoggedIn","useAuth"],"sourceRoot":""}